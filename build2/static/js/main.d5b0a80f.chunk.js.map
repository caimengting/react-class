{"version":3,"sources":["reactt/PrivateRoute.js","reactt/RouteWithSubRoutes.js","reactt/Header.js","reactt/Home.js","reactt/Core.js","reactt/Guide.js","reactt/Api.js","reactt/Hooks.js","reactt/router.config.js","reactt/Doc.js","reactt/Tuto.js","reactt/Blog.js","reactt/Comm.js","reactt/login.js","reactt/App.js","index.js"],"names":["PrivateRoute","Com","component","rest","render","location","localStorage","getItem","to","pathname","state","RouteWithSubRoutes","route","path","props","pri","routes","Header","activeClassName","exact","Home","console","log","style","textAlign","onClick","history","push","Core","Guide","Api","Hooks","withRouter","map","i","key","className","from","setItem","replace","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d5b0a80f.chunk.js","sourcesContent":["import React, {component} from 'react'\r\nimport {Redirect, Route, NavLink, Switch } from 'react-router-dom'\r\n\r\n//权限路由\r\n//封装一个组件\r\n//PrivateRoute替代Route\r\n//进入PrivateRoute页面的时候，如果不是登录状态，就转到登录页\r\n//Com就是重命名，改大写，组件首字母\r\n\r\n//背\nconst PrivateRoute = ({component:Com, ...rest}) => {\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{ ...rest }\r\n\t\t\t\trender={({location}) => \r\n\t\t\t\t\tlocalStorage.getItem('userinfo')\r\n\t\t\t\t\t? <Com {...rest}/>\r\n\t\t\t\t\t: (<Redirect to={{ pathname:'/login', state:location }} /> )\r\n\t\t\t\t}\r\n\t\t/>\r\n\t)\n}\n\nexport default PrivateRoute\r\n","import React, {useEffect} from 'react'\r\nimport {Route } from 'react-router-dom'\r\n\nimport PrivateRoute from './PrivateRoute'\r\n\nconst RouteWithSubRoutes = (route) => {\r\n\r\n\treturn (\r\n\t  <Route\r\n\t    path={route.path}\r\n\t    render={props => {\r\n\t\t\tif(route.pri) {\r\n\t\t\t  \treturn <PrivateRoute {...route}/>\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t  \treturn <route.component {...props} routes={route.routes}/>\r\n\t\t\t}\r\n\t\t  }}\r\n\t  />\r\n\t);\n}\n\nexport default RouteWithSubRoutes\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom'\nimport './header.css'\n\nconst Header = () => {\n    return (\n        <header>\n            <nav>\n                <NavLink activeClassName='active' exact to='/'>React</NavLink>\n                <NavLink activeClassName='active' to='/doc'>文档</NavLink>\n                <NavLink activeClassName='active' to='/tuto'>教程</NavLink>\n                <NavLink activeClassName='active' to='/blog'>博客</NavLink>\n                <NavLink activeClassName='active' to='/comm'>社区</NavLink>\n            </nav>\n        </header>\n    )\n}\n\nexport default Header","import React from 'react'\n\nconst Home = (props) => {\r\n\tconsole.log(props);\r\n\r\n    return (\n        <div style={{textAlign:'center'}}>\n            Home\r\n\t\t\t<h2>React</h2>\r\n\t\t\t<p>用于构建用户界面的JavaScript库</p>\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={() => props.history.push('/doc')}>快速开始</button> <br />\r\n\t\t\t\t<button onClick={() => props.history.push('/tuto')}>入门教程</button>\r\n\t\t\t</div>\r\n\t\t\t\n        </div>\n    )\n}\n\nexport default Home","import React from 'react'\n\nconst Core = () => {\r\n    return (\n        <h1>\n            Core教程\n        </h1>\n    )\n}\n\nexport default Core","import React, {useEffect} from 'react'\n\nconst Guide = () => {\r\n    return (\n        <h1>\n            Guide教程\n        </h1>\n    )\n}\n\nexport default Guide","import React from 'react'\n\nconst Api = () => {\n    return (\n        <h1>\n            Api教程\n        </h1>\n    )\n}\n\nexport default Api","import React, {useEffect} from 'react'\n\nconst Hooks = () => {\r\n \n    return (\n        <h1>\n            Hooks教程\n        </h1>\n    )\n}\n\nexport default Hooks","import Home from './Home';\nimport Doc from './Doc';\nimport Tuto from './Tuto';\nimport Blog from './Blog';\nimport Comm from './Comm';\r\nimport Login from './login';\r\n\r\n//import {Core, Guide, Api, Hooks} from './Doc';\r\nimport Core from './Core'\r\nimport Guide from './Guide'\r\nimport Api from './Api'\r\nimport Hooks from './Hooks'\r\n\r\n\r\n\r\n\r\nconst routes = [\r\n\t{\r\n\t\tpath:'/',\r\n\t\texact:true,\r\n\t\tcomponent:Home\r\n\t},\r\n\t{\r\n\t\tpath:'/doc',\r\n\t\tcomponent:Doc,\r\n\t\tpri:true,\r\n\t\troutes:[\r\n\t\t\t{\r\n\t\t\t\tpath:'/doc/core',\r\n\t\t\t\tcomponent:Core\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath:'/doc/guide',\r\n\t\t\t\tcomponent:Guide\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath:'/doc/api',\r\n\t\t\t\tcomponent:Api\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath:'/doc/hooks',\r\n\t\t\t\tcomponent:Hooks\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tpath:'/tuto',\r\n\t\texact:false,\r\n\t\tcomponent:Tuto,\r\n\t\tpri:true\r\n\t},\r\n\t{\r\n\t\tpath:'/blog',\r\n\t\texact:false,\r\n\t\tcomponent:Blog\r\n\t},\r\n\t{\r\n\t\tpath:'/comm',\r\n\t\texact:false,\r\n\t\tcomponent:Comm\r\n\t},\r\n\t{\r\n\t\tpath:'/login',\r\n\t\texact:false,\r\n\t\tcomponent:Login\r\n\t}\r\n]\r\n\r\nexport default routes;","import React, {useEffect} from 'react';\r\nimport {BrowserRouter as Router, NavLink, Route, Redirect, useHistory, useLocation, useParams, useRouteMatch, withRouter, Switch} from 'react-router-dom'\r\nimport './doc.css'\r\nimport RouteWithSubRoutes from './RouteWithSubRoutes'\r\n\r\nimport Core from './Core.js'\r\nimport Guide from './Guide.js'\r\nimport Api from './Api.js'\r\nimport Hooks from './Hooks.js'\r\n\r\nconst Doc = ({routes}) => {\r\n\t\n    return (\r\n\t\t<div>\r\n\t\t\t<Switch>\r\n\t\t\t\t{routes.map((route, i) => (\r\n\t\t\t\t  <RouteWithSubRoutes key={i} {...route} />\r\n\t\t\t\t))}\r\n\t\t\t</Switch>\n\t\t\t<div className='doc'>\r\n\t\t\t\t<ol>\r\n\t\t\t\t\t<li><NavLink activeClassName={'left-blue'} to='/doc/core'>核心概念</NavLink></li>\r\n\t\t\t\t\t<li><NavLink activeClassName={'left-blue'} to='/doc/guide'>高级指引</NavLink></li>\r\n\t\t\t\t\t<li><NavLink activeClassName={'left-blue'} to='/doc/api'>API</NavLink></li>\r\n\t\t\t\t\t<li><NavLink activeClassName={'left-blue'} to='/doc/hooks'>Hooks</NavLink></li>\r\n\t\t\t\t</ol>\r\n\t\t\t\t\r\n\t\t\t\t{/*Redirect默认点进去之后选第一项*/}\r\n\t\t\t\t<Redirect from='/doc' to='/doc/api' />\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\n    )\n}\n\nexport default withRouter(Doc)\r\n\r\n//export {Core, Guide, Api, Hooks}\r\n// const DocContent = (props) => {\r\n// \tconsole.log(props);\r\n// \treturn <h1>\r\n// \t\t\t\t{props.match.params.type}\r\n// \t\t</h1>\r\n// }\r\n\r\n// <div className='content'>\r\n// \t\t\t\t{/*嵌套路由*/}\r\n// \t\t\t\t<Route path='/doc/:type' component={DocContent} />\r\n// \t\t\t\t{/*Redirect默认点进去之后选第一项*/}\r\n// \t\t\t\t<Redirect from='/doc' to='/doc/api' />\r\n// </div>\r\n\r\n\t// const history = useHistory();\r\n\t// console.log(history);\r\n\t// const location = useLocation();\r\n\t// console.log(location);\r\n\t// const par = useParams();\r\n\t// console.log(par);\r\n\t// const mat = useRouteMatch();\r\n\t// console.log(mat);\r\n\r\n\t//登录验证\r\n\t// useEffect(() => {\r\n\t// \tif(!localStorage.getItem('userinfo')) {\r\n\t// \t\t//props.history.push('/login');\r\n\t// \t\tprops.history.push({\r\n\t// \t\t\tpathname:'/login',\r\n\t// \t\t\tstate:props.location\r\n\t// \t\t});\r\n\t// \t}\r\n\t// }, [])\r\n\r\n// <Switch>\r\n// \t\t\t\t{\r\n// \t\t\t\t\tprops.routes.map(({pri, ...rest}) =>(\r\n// \t\t\t\t\t\tpri === true\r\n// \t\t\t\t\t\t?\t<PrivateRoute {...rest} />\r\n// \t\t\t\t\t\t:\t<RouteWithSubRoutes {...rest} />\r\n// \t\t\t\t\t))\r\n// \t\t\t\t}\r\n\t\t\t\t\r\n// \t\t\t</Switch>\r\n\r\n{/*<NavBar\r\n\t\t\t      mode=\"light\"\r\n\t\t\t      icon={<Icon type=\"left\" />}\r\n\t\t\t      onLeftClick={() => {\r\n\t\t\t\t\t  //返回上一级\r\n\t\t\t\t\t\tprops.history.goBack()\r\n\t\t\t\t\t  }\r\n\t\t\t\t  }\r\n\t\t\t      rightContent={[\r\n\t\t\t        <Icon key=\"0\" type=\"search\" style={{ marginRight: '16px' }} />,\r\n\t\t\t        <Icon key=\"1\" type=\"ellipsis\" />,\r\n\t\t\t      ]}\r\n\t\t\t>NavBar112233</NavBar>*/}\r\n\t\t\t\r\n\t\t\t    \r\n\t\t\t\r\n{/*\r\n\t\t\t<Router><Switch>\r\n\t\t\t\t{\r\n\t\t\t\t\troutes.map(({pri, ...rest}) =>(\r\n\t\t\t\t\t\tpri === true\r\n\t\t\t\t\t\t?\t<PrivateRoute {...rest} />\r\n\t\t\t\t\t\t:\t<RouteWithSubRoutes {...rest} />\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t</Switch></Router>*/}","import React, {useEffect} from 'react'\n\nconst Tuto = (props) => {\r\n\tconsole.log(props);\r\n\t//登录验证\r\n\t// useEffect(() => {\r\n\t// \tif(!localStorage.getItem('userinfo')) {\r\n\t// \t\t//props.history.push('/login');\r\n\t// \t\tprops.history.push({\r\n\t// \t\t\tpathname:'/login',\r\n\t// \t\t\tstate:props.location\r\n\t// \t\t});\r\n\t// \t}\r\n\t// }, [])\n    return (\n        <div>\n            Tuto教程123\n        </div>\n    )\n}\n\nexport default Tuto","import React from 'react'\n\nconst Blog = () => {\n    return (\n        <div>\n            Blog\n        </div>\n    )\n}\n\nexport default Blog","import React from 'react'\n\nconst Comm = () => {\n    return (\n        <div>\n            Comm\n        </div>\n    )\n}\n\nexport default Comm","import React from 'react'\n\nconst Login = (props) => {\r\n\r\n\tconst login = () => {\r\n\t\tlocalStorage.setItem('userinfo', 'tom')\r\n\t\t//存完以后，跳到首页\r\n\t\t//props.history.push('/')\r\n\t\t//后退跳转不到登陆页\r\n\t\t//props.history.replace('/')\r\n\t\tprops.history.replace(props.location.state)\r\n\t}\n    return (\n        <div>\n            <h1>Login</h1>\r\n\t\t\t<button onClick={login}>登陆</button>\n        </div>\n    )\n}\n\nexport default Login","import React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, NavLink, Switch } from 'react-router-dom'\r\nimport RouteWithSubRoutes from './RouteWithSubRoutes'\r\nimport Header from './Header';\r\nimport routes from './router.config'\r\n\r\n\nconst App = ()=>{\r\n\tconsole.log(routes);\r\n\t\n\treturn <Router>\n\t\t\t\t<Header />\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t{routes.map((route, i) => (\r\n\t\t\t\t\t\t<RouteWithSubRoutes key={i} {...route} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Switch>\n\t\t\t</Router>\n}\n\r\nexport default App;\r\n\r\n//export  {PrivateRoute};\r\n\r\n\t\t{/*<Switch>\n\t\t\t\r\n\t\t\t\troutes.map(({pri, ...rest}) =>(\r\n\t\t\t\t\tpri === true\r\n\t\t\t\t\t?\t<PrivateRoute {...rest} />\r\n\t\t\t\t\t:\t<RouteWithSubRoutes {...rest} />\r\n\t\t\t\t))\n\t\t</Switch>*/}\r\n\t\t\r\n// routes.map((route) =>(\r\n\t// \troute.pri === true\r\n\t// \t?\t<PrivateRoute {...route} />\r\n\t// \t:\t<Route {...route} />\r\n\t// ))\r\n//props.data.map((item)=> <li type=\"checkbox\">{item.title}</li>)\r\n\t\t\t//Switch里面被替换掉的部分\r\n\t\t\t//20201012\r\n\t\t\t\r\n\t\t\t// <Route exact path='/' component={Home} />\n\t\t\t// <PrivateRoute  path='/doc' component={Doc} />\n\t\t\t// <PrivateRoute  path='/tuto' component={Tuto}/>\n\t\t\t// <PrivateRoute path='/blog' component={Blog}/>\n\t\t\t// <Route path='/comm' component={Comm}/>\r\n\t\t\t// <Route path='/login' component={Login}/>\r\n\t\t\t\r\n\t\t\t// <Route path='*' component={() => <h1>404</h1>} />\r\n","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\n\r\n//import PropTypes from 'prop-types';\r\n\r\n\r\n//import Context from './pages/0928demo/context.js'\r\n//import App from './conponents/appya/app';\r\n\r\n\r\n//todolist\r\n// import Todolist from './conponents/Todolist.js'\r\n// ReactDOM.render(<Todolist />, document.getElementById('root'))\r\n\r\n\r\n//20201005\r\n// import App from './conponents/app20201005.js'\r\n// ReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n//20201005下午\r\n//react官网\r\nimport App from './reactt/App';\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n//网上的例子\r\n// import App from './reactt/app1';\r\n// ReactDOM.render(<App />, document.getElementById('root'))\r\n//移动端\r\n//import 'antd-mobile/dist/antd-mobile.css'\r\n// import App from './reactt/Apptaobao.js'\r\n// ReactDOM.render(<App />, document.getElementById('root'))\r\n//淘宝\r\n// import App from './taobao/App.js'\r\n// ReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n\r\n\r\n// import Demo01 from './pages/0928demo/demo01'\r\n// import App from './pages/0928demo/app'\r\n//import Lifecycle from './conponents/Lifecycle.js'\r\n\r\n\r\n//import Hoc,{Detail} from './pages/0928demo/hoc'\r\n//import Hook from './pages/0928demo/hook'\r\n\r\n//import Loginform from './conponents/Loginform'\r\n\r\n\r\n//import Home from './pages/Home'\r\n\r\n//import List from 'pages/List'\r\n\r\n//import $ from \"jquery\"\r\n//console.log($)\r\n\r\n// ReactDOM.render(<Demo01 />, document.getElementById('root'))\r\n// ReactDOM.render(<div> <Hoc /> <Detail /> </div>, document.getElementById('root'))\r\n\r\n\r\n\r\n// ReactDOM.render(\r\n// \t\t<Context.Provider value='123'>\r\n// \t\t\t<Hook />\r\n// \t\t</Context.Provider>\r\n// \t\t, document.getElementById('root'))\r\n\r\n\r\n\r\n// ReactDOM.render(\r\n// \t<Home />,\r\n// \tdocument.getElementById('root4')\r\n\r\n// )\r\n\r\n\r\n//ReactDOM.render(<Lifecycle msg=\"react太难了\"/>, document.getElementById('example'))\r\n\r\n\r\n//reactdom是什么\r\n// let ReactDOM = {\r\n// \trender(eleobj, container) {\r\n// \t\t//解构\r\n// \t\tconst {type, props} = eleobj;\r\n// \t\t//创建最外层节点\r\n// \t\tlet ele = document.createElement(type);\r\n\r\n\r\n// \t\tconsole.log(props);\r\n// \t\tfor(const key in props) {\r\n// \t\t\tif(key === 'children') {\r\n// \t\t\t\tif(typeof props.children == 'string') {\r\n// \t\t\t\t\tconst txtNode = document.createTextNode(props.children);\r\n// \t\t\t\t\tele.appendChild(txtNode)\r\n// \t\t\t\t\tbreak \r\n// \t\t\t\t}\r\n// \t\t\t\t//ele.setAttribute('class', props[key])\r\n// \t\t\t\t//遍历属性对象，将属性添加到第一层节点中\r\n// \t\t\t\tprops.children.forEach((child) => {\r\n// \t\t\t\t\tif(typeof child == 'string') {\r\n// \t\t\t\t\t\tconst txtNode = document.createTextNode(child);\r\n// \t\t\t\t\t\tele.appendChild(txtNode)\r\n// \t\t\t\t\t}\r\n// \t\t\t\t\telse {\r\n// \t\t\t\t\t\t//递归\r\n// \t\t\t\t\t\tReactDOM.render(child, ele);\r\n// \t\t\t\t\t}\r\n// \t\t\t\t})\r\n// \t\t\t}\r\n// \t\t\t//if(key !== 'children') {\r\n// \t\t\telse {\r\n// \t\t\t\tele[key] = props[key];\r\n// \t\t\t}\r\n// \t\t}\r\n\r\n\r\n// \t\tcontainer.appendChild(ele);\r\n// \t}\r\n// }\r\n\r\n\r\n// let ele = React.createElement('h1',{id:'divid',className:'tit'},'hello world222')\r\n// ReactDOM.render(ele, document.getElementById('title'))\r\n\r\n\r\n// ReactDOM.render(\r\n//   <div >\r\n//     <h2>hello world111</h2>\r\n// \t<h2>hello world111</h2>\r\n//   </div>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n\r\n//组件\r\n//函数组件\r\n\r\n// function Hello(props) {\r\n// \tconsole.log(props);\r\n// \treturn <h1>Hello,{props.name}</h1>\r\n\r\n// }\r\n// ReactDOM.render(\r\n// \t<Hello name='React' />,\r\n// \tdocument.getElementById('root2')\r\n// )\r\n\r\n// function App(props) {\r\n// \tconst {title, id} = props;\r\n// \treturn <div>\r\n// \t\t\t\t<div>{title} </div>\r\n// \t\t\t\t<div> {id} </div>\r\n// \t\t\t</div>\r\n\r\n// }\r\n\r\n// ReactDOM.render(\r\n// \t<App title='Reacttitle' id='reactid' />,\r\n// \tdocument.getElementById('root2')\r\n// )\r\n\r\n//类定义组件\r\n\r\n// class Demo extends React.Component {\r\n// \t//console.log(this)\r\n// \tconstructor() {\r\n// \t    super();\r\n// \t\tthis.state = {\r\n// \t\t\tname:'thisstatename',\r\n// \t\t\ttime:new Date().toLocaleString()\r\n// \t\t}\r\n// \t\tsetTimeout(() => {\r\n// \t\t\tthis.setState({name:'11111111111111111111'})\r\n// \t\t},1000)\r\n// \t\tsetInterval(() => {\r\n// \t\t\tthis.setState({time:new Date().toLocaleString()})\r\n// \t\t})\r\n// \t}\r\n// \trender() {\r\n// \t\treturn <div>\r\n// \t\t\t\t\t<App title='啊哈哈' id='嗯哼' />\r\n// \t\t\t\t\t<App title='cmt' id='仙女' />\r\n// \t\t\t\t\t<App title='咦嘻嘻' id='哦吼' />\r\n// \t\t\t\t\t<div> {this.state.name}</div>\r\n// \t\t\t\t\t<div> {this.state.time}</div>\r\n// \t\t\t\t</div>\r\n// \t}\r\n// }\r\n\r\n// ReactDOM.render(\r\n// \t<Demo  />,\r\n// \tdocument.getElementById('root3')\r\n// )\r\n\r\n\r\n\r\n\r\n\r\n//组件分离\r\n\r\n// const Buttons = () => {\r\n\r\n// \tconst btns = [1,2,3,4,5];\r\n// \tconst handleClick = (num) => {\r\n// \t\t//console.log(this);//undefined\r\n// \t\tconsole.log(num);\r\n// \t}\r\n// \treturn <div>{\r\n// \t\tbtns.map((item) => (\r\n// \t\t\t\t<button key={item} onClick={()=>this.getData(item)}>\r\n// \t\t\t\t\t{item}\r\n// \t\t\t\t</button>\r\n// \t\t\t)\r\n// \t\t)\r\n// \t}</div>\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//TodoList\r\n// import TList from './conponents/TList.js'\r\n// import Add from './conponents/Add'\r\n// class App extends React.Component {\r\n\r\n// \t\tconstructor(props) {\r\n// \t\t\tsuper(props)\r\n// \t\t\tthis.state = {\r\n// \t\t\t\ttodos:['吃饭呢','shuijiao']\r\n// \t\t\t}\r\n// \t\t\tthis.addToDo = this.addToDo.bind(this)\r\n// \t\t}\r\n\r\n// \t\taddToDo(todo) {\r\n// \t\t\t//this.state.todos.unshift(todo)///不能\r\n// \t\t\tconst {todos} = this.state\r\n// \t\t\ttodos.unshift(todo)\r\n// \t\t\tthis.setState({todos})\r\n// \t\t}\r\n// \t\trender() {\r\n// \t\t\tconst {todos} = this.state\r\n// \t\t\treturn (\r\n// \t\t\t\t<div>\r\n// \t\t\t\t\t<h1> Simple TODO List </h1>\r\n// \t\t\t\t\t<Add count={todos.length} addToDo={this.addToDo}/>\r\n// \t\t\t\t\t<TList todos={todos}/>\r\n// \t\t\t\t</div>\r\n// \t\t\t)\r\n// \t\t}\r\n// \t}\r\n\r\n\t\r\n// \tAdd.propTypes ={\r\n// \t\tconst:PropTypes.number.isRequired,\r\n// \t\taddToDo:PropTypes.func.isRequired\r\n// \t}\r\n\r\n\t\r\n\r\n// \tReactDOM.render(<App />, document.getElementById('example'))"],"sourceRoot":""}