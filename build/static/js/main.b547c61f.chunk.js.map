{"version":3,"sources":["index.js"],"names":["console","log","$","List","props","data","map","item","title","Home1","getData","page","fetch","then","res","json","data1","setState","state","this","key","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+NAIAA,QAAQC,IAAIC,KA8IZ,IAAMC,EAAO,SAACC,GACb,OAAO,4BACJA,EAAMC,KAAKC,KAAI,SAACC,GAAD,OAAS,4BAAKA,EAAKC,YAGhCC,E,kDAEL,WAAYL,GAAQ,IAAD,8BACf,gBAgBJM,QAAU,SAACC,GACVC,MAAM,0CAA0CD,GAC/CE,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACLhB,QAAQC,IAAIe,GACZ,EAAKC,SAAS,CAACZ,KAAKW,EAAMX,WAnB3B,EAAKa,MAAQ,CACXb,KAAK,CAAC,EAAE,EAAE,IAEZL,QAAQC,IAAI,eANM,E,gEAQE,IAAD,OACnBW,MAAM,qCACLC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAEL,EAAKC,SAAS,CAACZ,KAAKW,EAAMX,UAE3BL,QAAQC,IAAI,uB,+BAUH,IAAD,OACRD,QAAQC,IAAI,UADJ,IAMDI,EAAQc,KAAKD,MAAbb,KAGP,OAAO,6BAFM,CAAC,EAAE,EAAE,EAAE,EAAE,GAIdC,KAAI,SAACC,GAAD,OACP,4BAAQa,IAAKb,EAAMc,QAAS,kBAAI,EAAKX,QAAQH,KAC3CA,MAKL,kBAACJ,EAAD,CAAME,KAAMA,S,GA7CIiB,IAAMC,WAsD1BC,IAASC,OACR,kBAAChB,EAAD,MACAiB,SAASC,eAAe,Y","file":"static/js/main.b547c61f.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n// import PropTypes from 'prop-types.js'\r\nimport $ from \"jquery\"\r\nconsole.log($)\r\n\r\n\n//reactdom是什么\r\n// let ReactDOM = {\r\n// \trender(eleobj, container) {\r\n// \t\t//解构\r\n// \t\tconst {type, props} = eleobj;\r\n// \t\t//创建最外层节点\r\n// \t\tlet ele = document.createElement(type);\r\n\t\t\r\n\t\t\r\n// \t\tconsole.log(props);\r\n// \t\tfor(const key in props) {\r\n// \t\t\tif(key === 'children') {\r\n// \t\t\t\tif(typeof props.children == 'string') {\r\n// \t\t\t\t\tconst txtNode = document.createTextNode(props.children);\r\n// \t\t\t\t\tele.appendChild(txtNode)\r\n// \t\t\t\t\tbreak \r\n// \t\t\t\t}\r\n// \t\t\t\t//ele.setAttribute('class', props[key])\r\n// \t\t\t\t//遍历属性对象，将属性添加到第一层节点中\r\n// \t\t\t\tprops.children.forEach((child) => {\r\n// \t\t\t\t\tif(typeof child == 'string') {\r\n// \t\t\t\t\t\tconst txtNode = document.createTextNode(child);\r\n// \t\t\t\t\t\tele.appendChild(txtNode)\r\n// \t\t\t\t\t}\r\n// \t\t\t\t\telse {\r\n// \t\t\t\t\t\t//递归\r\n// \t\t\t\t\t\tReactDOM.render(child, ele);\r\n// \t\t\t\t\t}\r\n// \t\t\t\t})\r\n// \t\t\t}\r\n// \t\t\t//if(key !== 'children') {\r\n// \t\t\telse {\r\n// \t\t\t\tele[key] = props[key];\r\n// \t\t\t}\r\n// \t\t}\r\n\t\t\r\n\t\t\r\n// \t\tcontainer.appendChild(ele);\r\n// \t}\r\n// }\r\n\r\n\r\n// let ele = React.createElement('h1',{id:'divid',className:'tit'},'hello world222')\r\n// ReactDOM.render(ele, document.getElementById('title'))\r\n\r\n\n// ReactDOM.render(\n//   <div >\n//     <h2>hello world111</h2>\r\n// \t<h2>hello world111</h2>\n//   </div>,\n//   document.getElementById('root')\n// );\n\n\n//组件\r\n//函数组件\r\n\r\n// function Hello(props) {\r\n// \tconsole.log(props);\r\n// \treturn <h1>Hello,{props.name}</h1>\r\n\t\r\n// }\r\n// ReactDOM.render(\r\n// \t<Hello name='React' />,\r\n// \tdocument.getElementById('root2')\r\n// )\r\n\r\n// function App(props) {\r\n// \tconst {title, id} = props;\r\n// \treturn <div>\r\n// \t\t\t\t<div>{title} </div>\r\n// \t\t\t\t<div> {id} </div>\r\n// \t\t\t</div>\r\n\r\n// }\r\n\r\n// ReactDOM.render(\r\n// \t<App title='Reacttitle' id='reactid' />,\r\n// \tdocument.getElementById('root2')\r\n// )\r\n\r\n//类定义组件\r\n\r\n// class Demo extends React.Component {\r\n// \t//console.log(this)\r\n// \tconstructor() {\r\n// \t    super();\r\n// \t\tthis.state = {\r\n// \t\t\tname:'thisstatename',\r\n// \t\t\ttime:new Date().toLocaleString()\r\n// \t\t}\r\n// \t\tsetTimeout(() => {\r\n// \t\t\tthis.setState({name:'11111111111111111111'})\r\n// \t\t},1000)\r\n// \t\tsetInterval(() => {\r\n// \t\t\tthis.setState({time:new Date().toLocaleString()})\r\n// \t\t})\r\n// \t}\r\n// \trender() {\r\n// \t\treturn <div>\r\n// \t\t\t\t\t<App title='啊哈哈' id='嗯哼' />\r\n// \t\t\t\t\t<App title='cmt' id='仙女' />\r\n// \t\t\t\t\t<App title='咦嘻嘻' id='哦吼' />\r\n// \t\t\t\t\t<div> {this.state.name}</div>\r\n// \t\t\t\t\t<div> {this.state.time}</div>\r\n// \t\t\t\t</div>\r\n// \t}\r\n// }\r\n\r\n// ReactDOM.render(\r\n// \t<Demo  />,\r\n// \tdocument.getElementById('root3')\r\n// )\r\n\r\n\r\n\r\n\r\n\r\n//组件分离\r\n\r\n// const Buttons = () => {\r\n\t\r\n// \tconst btns = [1,2,3,4,5];\r\n// \tconst handleClick = (num) => {\r\n// \t\t//console.log(this);//undefined\r\n// \t\tconsole.log(num);\r\n// \t}\r\n// \treturn <div>{\r\n// \t\tbtns.map((item) => (\r\n// \t\t\t\t<button key={item} onClick={()=>this.getData(item)}>\r\n// \t\t\t\t\t{item}\r\n// \t\t\t\t</button>\r\n// \t\t\t)\r\n// \t\t)\r\n// \t}</div>\r\n// }\r\n\r\n\r\nconst List = (props)=> {\r\n\treturn <ul>{\r\n\t\t\t\tprops.data.map((item)=> <li>{item.title}</li>)\r\n\t\t\t}</ul>\r\n}\r\nclass Home1 extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n\t    super();\r\n\t\t//this.handleClick = this.handleClick.bind()\r\n\t\tthis.state = {\r\n\t\t\t\tdata:[1,2,3]\r\n\t\t}\r\n\t\tconsole.log(\"constructor\");\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://cnodejs.org/api/v1/topics')\r\n\t\t.then(res=>res.json())\r\n\t\t.then(data1=>{\r\n\t\t\t//console.log(data1);\r\n\t\t\tthis.setState({data:data1.data})\r\n\t\t})\r\n\t\tconsole.log(\"componentDidMount\");\r\n\t}\r\n\tgetData = (page) => {\r\n\t\tfetch('https://cnodejs.org/api/v1/topics?page='+page)\r\n\t\t.then(res=>res.json())\r\n\t\t.then(data1=>{\r\n\t\t\tconsole.log(data1);\r\n\t\t\tthis.setState({data:data1.data})\r\n\t\t})\r\n\t}\r\n\trender() {\r\n\t\tconsole.log(\"render\");\r\n\t\t// return <ul>{\r\n\t\t// \tthis.state.data.map((item)=><li>{item.title}</li>)\r\n\t\t// }</ul>\r\n\t\t \r\n\t\tconst {data} = this.state;\r\n\t\tconst btns = [1,2,3,4,5];\r\n\t\t\r\n\t\treturn <div>\r\n\t\t\t\t{\r\n\t\t\t\t\tbtns.map((item) => (\r\n\t\t\t\t\t\t\t<button key={item} onClick={()=>this.getData(item)}>\r\n\t\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t<List data={data}/>\r\n\t\t\t   </div>\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n\t<Home1 />,\r\n\tdocument.getElementById('root4')\r\n\t\r\n)\r\n\r\n\r\n\r\n\r\n\r\n//TodoList\r\n\r\n\t\t\t"],"sourceRoot":""}